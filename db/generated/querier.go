// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CountUsers(ctx context.Context) (int64, error)
	CreateResetPasswordToken(ctx context.Context, arg CreateResetPasswordTokenParams) (*ResetPasswordToken, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (*Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (*User, error)
	DeleteSession(ctx context.Context, id uuid.UUID) error
	DeleteUser(ctx context.Context, id int64) error
	GetResetPasswordToken(ctx context.Context, id uuid.UUID) (*ResetPasswordToken, error)
	GetSession(ctx context.Context, id uuid.UUID) (*Session, error)
	GetUser(ctx context.Context, id int64) (*User, error)
	GetUserAndSessionBySessionID(ctx context.Context, id uuid.UUID) (*GetUserAndSessionBySessionIDRow, error)
	GetUserByUsernameOrEmail(ctx context.Context, username string) (*User, error)
	InvalidateResetPasswordToken(ctx context.Context, id uuid.UUID) error
	ListUsers(ctx context.Context, arg ListUsersParams) ([]*User, error)
	ListUsersPaginated(ctx context.Context, arg ListUsersPaginatedParams) ([]*User, error)
	UpdateSession(ctx context.Context, arg UpdateSessionParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	UpdateUserTOTPSecret(ctx context.Context, arg UpdateUserTOTPSecretParams) error
}

var _ Querier = (*Queries)(nil)
