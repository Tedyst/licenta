// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0

package queries

import (
	"database/sql"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type BruteforcedPassword struct {
	ID               int64          `json:"id"`
	Hash             string         `json:"hash"`
	Username         string         `json:"username"`
	Password         sql.NullString `json:"password"`
	LastBruteforceID sql.NullInt64  `json:"last_bruteforce_id"`
	ProjectID        sql.NullInt64  `json:"project_id"`
}

type DefaultBruteforcePassword struct {
	ID       int64  `json:"id"`
	Password string `json:"password"`
}

type DockerImage struct {
	ID                            int64              `json:"id"`
	ProjectID                     int64              `json:"project_id"`
	DockerImage                   string             `json:"docker_image"`
	Username                      string             `json:"username"`
	Password                      string             `json:"password"`
	MinProbability                sql.NullFloat64    `json:"min_probability"`
	ProbabilityDecreaseMultiplier sql.NullFloat64    `json:"probability_decrease_multiplier"`
	ProbabilityIncreaseMultiplier sql.NullFloat64    `json:"probability_increase_multiplier"`
	EntropyThreshold              sql.NullFloat64    `json:"entropy_threshold"`
	LogisticGrowthRate            sql.NullFloat64    `json:"logistic_growth_rate"`
	CreatedAt                     pgtype.Timestamptz `json:"created_at"`
}

type DockerLayer struct {
	ID        int64              `json:"id"`
	ImageID   int64              `json:"image_id"`
	LayerHash string             `json:"layer_hash"`
	ScannedAt pgtype.Timestamptz `json:"scanned_at"`
}

type DockerResult struct {
	ID            int64              `json:"id"`
	LayerID       int64              `json:"layer_id"`
	Name          string             `json:"name"`
	Line          string             `json:"line"`
	LineNumber    int32              `json:"line_number"`
	PreviousLines string             `json:"previous_lines"`
	Match         string             `json:"match"`
	Probability   float64            `json:"probability"`
	Username      sql.NullString     `json:"username"`
	Password      sql.NullString     `json:"password"`
	Filename      string             `json:"filename"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
}

type DockerScan struct {
	ID      int64 `json:"id"`
	ScanID  int64 `json:"scan_id"`
	ImageID int64 `json:"image_id"`
}

type GitCommit struct {
	ID           int64              `json:"id"`
	RepositoryID int64              `json:"repository_id"`
	CommitHash   string             `json:"commit_hash"`
	Author       sql.NullString     `json:"author"`
	AuthorEmail  sql.NullString     `json:"author_email"`
	CommitDate   pgtype.Timestamptz `json:"commit_date"`
	Description  sql.NullString     `json:"description"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type GitRepository struct {
	ID            int64              `json:"id"`
	ProjectID     int64              `json:"project_id"`
	GitRepository string             `json:"git_repository"`
	Username      string             `json:"username"`
	Password      string             `json:"password"`
	PrivateKey    string             `json:"private_key"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
}

type GitResult struct {
	ID          int64              `json:"id"`
	Commit      int64              `json:"commit"`
	Name        string             `json:"name"`
	Line        string             `json:"line"`
	LineNumber  int32              `json:"line_number"`
	Match       string             `json:"match"`
	Probability float64            `json:"probability"`
	Username    sql.NullString     `json:"username"`
	Password    sql.NullString     `json:"password"`
	Filename    string             `json:"filename"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}

type GitScan struct {
	ID           int64 `json:"id"`
	ScanID       int64 `json:"scan_id"`
	RepositoryID int64 `json:"repository_id"`
}

type MongoDatabase struct {
	ID           int64              `json:"id"`
	ProjectID    int64              `json:"project_id"`
	Host         string             `json:"host"`
	Port         int32              `json:"port"`
	DatabaseName string             `json:"database_name"`
	Username     string             `json:"username"`
	Password     string             `json:"password"`
	Version      sql.NullString     `json:"version"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type MongoScan struct {
	ID         int64 `json:"id"`
	ScanID     int64 `json:"scan_id"`
	DatabaseID int64 `json:"database_id"`
}

type MysqlDatabase struct {
	ID           int64              `json:"id"`
	ProjectID    int64              `json:"project_id"`
	Host         string             `json:"host"`
	Port         int32              `json:"port"`
	DatabaseName string             `json:"database_name"`
	Username     string             `json:"username"`
	Password     string             `json:"password"`
	Version      sql.NullString     `json:"version"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type MysqlScan struct {
	ID         int64 `json:"id"`
	ScanID     int64 `json:"scan_id"`
	DatabaseID int64 `json:"database_id"`
}

type NvdCfe struct {
	ID           int64              `json:"id"`
	CveID        string             `json:"cve_id"`
	Description  string             `json:"description"`
	Published    pgtype.Timestamptz `json:"published"`
	LastModified pgtype.Timestamptz `json:"last_modified"`
	Score        float64            `json:"score"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type NvdCpe struct {
	ID           int64              `json:"id"`
	Cpe          string             `json:"cpe"`
	DatabaseType int32              `json:"database_type"`
	Version      string             `json:"version"`
	LastModified pgtype.Timestamptz `json:"last_modified"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type NvdCveCpe struct {
	ID    int64 `json:"id"`
	CveID int64 `json:"cve_id"`
	CpeID int64 `json:"cpe_id"`
}

type Organization struct {
	ID            int64              `json:"id"`
	Name          string             `json:"name"`
	EncryptionKey []byte             `json:"encryption_key"`
	CreatedAt     pgtype.Timestamptz `json:"created_at"`
}

type OrganizationMember struct {
	ID             int64              `json:"id"`
	OrganizationID int64              `json:"organization_id"`
	UserID         int64              `json:"user_id"`
	Role           int32              `json:"role"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
}

type PostgresDatabase struct {
	ID           int64              `json:"id"`
	ProjectID    int64              `json:"project_id"`
	Host         string             `json:"host"`
	Port         int32              `json:"port"`
	DatabaseName string             `json:"database_name"`
	Username     string             `json:"username"`
	Password     string             `json:"password"`
	Version      sql.NullString     `json:"version"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type PostgresScan struct {
	ID         int64 `json:"id"`
	ScanID     int64 `json:"scan_id"`
	DatabaseID int64 `json:"database_id"`
}

type Project struct {
	ID             int64              `json:"id"`
	Name           string             `json:"name"`
	OrganizationID int64              `json:"organization_id"`
	Remote         bool               `json:"remote"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
}

type RedisDatabase struct {
	ID        int64              `json:"id"`
	ProjectID int64              `json:"project_id"`
	Host      string             `json:"host"`
	Port      int32              `json:"port"`
	Username  string             `json:"username"`
	Password  string             `json:"password"`
	Version   sql.NullString     `json:"version"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type RedisScan struct {
	ID         int64 `json:"id"`
	ScanID     int64 `json:"scan_id"`
	DatabaseID int64 `json:"database_id"`
}

type RememberMeToken struct {
	ID        int64              `json:"id"`
	UserID    int64              `json:"user_id"`
	Token     string             `json:"token"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type ResetPasswordToken struct {
	ID        uuid.UUID          `json:"id"`
	UserID    int64              `json:"user_id"`
	Valid     bool               `json:"valid"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type Scan struct {
	ID          int64              `json:"id"`
	ScanGroupID int64              `json:"scan_group_id"`
	ScanType    int32              `json:"scan_type"`
	Status      int32              `json:"status"`
	Error       sql.NullString     `json:"error"`
	WorkerID    sql.NullInt64      `json:"worker_id"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	EndedAt     pgtype.Timestamptz `json:"ended_at"`
}

type ScanBruteforceResult struct {
	ID        int64              `json:"id"`
	ScanID    int64              `json:"scan_id"`
	ScanType  int32              `json:"scan_type"`
	Username  string             `json:"username"`
	Password  sql.NullString     `json:"password"`
	Total     int32              `json:"total"`
	Tried     int32              `json:"tried"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type ScanGroup struct {
	ID        int64              `json:"id"`
	ProjectID int64              `json:"project_id"`
	CreatedBy sql.NullInt64      `json:"created_by"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type ScanResult struct {
	ID         int64              `json:"id"`
	ScanID     int64              `json:"scan_id"`
	Severity   int32              `json:"severity"`
	Message    string             `json:"message"`
	ScanSource int32              `json:"scan_source"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
}

type TotpSecretToken struct {
	ID         int64              `json:"id"`
	UserID     int64              `json:"user_id"`
	Valid      bool               `json:"valid"`
	TotpSecret string             `json:"totp_secret"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
}

type User struct {
	ID                int64              `json:"id"`
	Username          string             `json:"username"`
	Password          string             `json:"password"`
	Email             string             `json:"email"`
	RecoveryCodes     sql.NullString     `json:"recovery_codes"`
	TotpSecret        sql.NullString     `json:"totp_secret"`
	RecoverSelector   sql.NullString     `json:"recover_selector"`
	RecoverVerifier   sql.NullString     `json:"recover_verifier"`
	RecoverExpiry     pgtype.Timestamptz `json:"recover_expiry"`
	LoginAttemptCount int32              `json:"login_attempt_count"`
	LoginLastAttempt  pgtype.Timestamptz `json:"login_last_attempt"`
	Locked            pgtype.Timestamptz `json:"locked"`
	ConfirmSelector   sql.NullString     `json:"confirm_selector"`
	ConfirmVerifier   sql.NullString     `json:"confirm_verifier"`
	Confirmed         bool               `json:"confirmed"`
	CreatedAt         pgtype.Timestamptz `json:"created_at"`
}

type WebauthnCredential struct {
	ID              int64    `json:"id"`
	UserID          int64    `json:"user_id"`
	Name            string   `json:"name"`
	CredentialID    []byte   `json:"credential_id"`
	PublicKey       []byte   `json:"public_key"`
	AttestationType string   `json:"attestation_type"`
	Transport       []string `json:"transport"`
	UserPresent     bool     `json:"user_present"`
	UserVerified    bool     `json:"user_verified"`
	BackupEligible  bool     `json:"backup_eligible"`
	BackupState     bool     `json:"backup_state"`
	AaGuid          []byte   `json:"aa_guid"`
	SignCount       int32    `json:"sign_count"`
	CloneWarning    bool     `json:"clone_warning"`
	Attachment      string   `json:"attachment"`
}

type Worker struct {
	ID           int64              `json:"id"`
	Token        string             `json:"token"`
	Name         string             `json:"name"`
	Organization int64              `json:"organization"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}
