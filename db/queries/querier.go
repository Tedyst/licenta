// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0

package queries

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

type Querier interface {
	AddOrganizationUser(ctx context.Context, arg AddOrganizationUserParams) (*OrganizationMember, error)
	AddUserToOrganization(ctx context.Context, arg AddUserToOrganizationParams) error
	BindScanToWorker(ctx context.Context, arg BindScanToWorkerParams) (*Scan, error)
	CountUsers(ctx context.Context) (int64, error)
	CreateBruteforcedPassword(ctx context.Context, arg CreateBruteforcedPasswordParams) (*BruteforcedPassword, error)
	CreateDockerImage(ctx context.Context, arg CreateDockerImageParams) (*DockerImage, error)
	CreateDockerImageForProject(ctx context.Context, arg CreateDockerImageForProjectParams) (*DockerImage, error)
	CreateDockerLayerResultsForProject(ctx context.Context, arg []CreateDockerLayerResultsForProjectParams) (int64, error)
	CreateDockerScannedLayerForProject(ctx context.Context, arg CreateDockerScannedLayerForProjectParams) (*DockerLayer, error)
	CreateGitCommitForProject(ctx context.Context, arg CreateGitCommitForProjectParams) (*GitCommit, error)
	CreateGitRepository(ctx context.Context, arg CreateGitRepositoryParams) (*GitRepository, error)
	CreateGitRepositoryForProject(ctx context.Context, arg CreateGitRepositoryForProjectParams) (*GitRepository, error)
	CreateGitResultForCommit(ctx context.Context, arg []CreateGitResultForCommitParams) (int64, error)
	CreateMysqlDatabase(ctx context.Context, arg CreateMysqlDatabaseParams) (*MysqlDatabase, error)
	CreateMysqlScan(ctx context.Context, arg CreateMysqlScanParams) (*MysqlScan, error)
	CreateNvdCPE(ctx context.Context, arg CreateNvdCPEParams) (*NvdCpe, error)
	CreateNvdCve(ctx context.Context, arg CreateNvdCveParams) (*NvdCfe, error)
	CreateNvdCveCPE(ctx context.Context, arg CreateNvdCveCPEParams) (*NvdCveCpe, error)
	CreateOrganization(ctx context.Context, name string) (*Organization, error)
	CreatePostgresDatabase(ctx context.Context, arg CreatePostgresDatabaseParams) (*PostgresDatabase, error)
	CreatePostgresScan(ctx context.Context, arg CreatePostgresScanParams) (*PostgresScan, error)
	CreateProject(ctx context.Context, arg CreateProjectParams) (*Project, error)
	CreateRememberMeToken(ctx context.Context, arg CreateRememberMeTokenParams) (*RememberMeToken, error)
	CreateResetPasswordToken(ctx context.Context, arg CreateResetPasswordTokenParams) (*ResetPasswordToken, error)
	CreateScan(ctx context.Context, arg CreateScanParams) (*Scan, error)
	CreateScanBruteforceResult(ctx context.Context, arg CreateScanBruteforceResultParams) (*ScanBruteforceResult, error)
	CreateScanGroup(ctx context.Context, arg CreateScanGroupParams) (*ScanGroup, error)
	CreateScanResult(ctx context.Context, arg CreateScanResultParams) (*ScanResult, error)
	CreateTOTPSecretForUser(ctx context.Context, arg CreateTOTPSecretForUserParams) (*TotpSecretToken, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (*User, error)
	CreateWebauthnCredential(ctx context.Context, arg CreateWebauthnCredentialParams) (*WebauthnCredential, error)
	DeleteDockerImage(ctx context.Context, id int64) error
	DeleteDockerImageForProject(ctx context.Context, arg DeleteDockerImageForProjectParams) error
	DeleteGitRepository(ctx context.Context, id int64) error
	DeleteGitRepositoryForProject(ctx context.Context, arg DeleteGitRepositoryForProjectParams) error
	DeleteMysqlDatabase(ctx context.Context, id int64) error
	DeleteNvdCveByName(ctx context.Context, cveID string) error
	DeleteOrganization(ctx context.Context, id int64) error
	DeletePostgresDatabase(ctx context.Context, id int64) error
	DeleteProject(ctx context.Context, id int64) (*Project, error)
	DeleteRememberMeTokenByUserAndToken(ctx context.Context, arg DeleteRememberMeTokenByUserAndTokenParams) error
	DeleteRememberMeTokensForUser(ctx context.Context, userID int64) error
	DeleteUser(ctx context.Context, id int64) error
	GetAllOrganizationMembersForOrganizationsThatContainUser(ctx context.Context, userID int64) ([]*GetAllOrganizationMembersForOrganizationsThatContainUserRow, error)
	GetAllOrganizationProjectsForUser(ctx context.Context, userID int64) ([]*GetAllOrganizationProjectsForUserRow, error)
	GetBruteforcePasswordsForProjectCount(ctx context.Context, projectID int64) (int64, error)
	GetBruteforcePasswordsPaginated(ctx context.Context, arg GetBruteforcePasswordsPaginatedParams) ([]*DefaultBruteforcePassword, error)
	GetBruteforcePasswordsSpecificForProject(ctx context.Context, projectID int64) ([]sql.NullString, error)
	GetBruteforcedPasswords(ctx context.Context, arg GetBruteforcedPasswordsParams) (*BruteforcedPassword, error)
	GetCPEByProductAndVersion(ctx context.Context, arg GetCPEByProductAndVersionParams) (*NvdCpe, error)
	GetCountOfScanGroupsForProject(ctx context.Context, projectID int64) (int64, error)
	GetCveByCveID(ctx context.Context, cveID string) (*NvdCfe, error)
	GetCveCpeByCveAndCpe(ctx context.Context, arg GetCveCpeByCveAndCpeParams) (*NvdCveCpe, error)
	GetCvesByProductAndVersion(ctx context.Context, arg GetCvesByProductAndVersionParams) ([]*GetCvesByProductAndVersionRow, error)
	GetDockerImage(ctx context.Context, id int64) (*DockerImage, error)
	GetDockerImagesForProject(ctx context.Context, projectID int64) ([]*DockerImage, error)
	GetDockerLayersAndResultsForImage(ctx context.Context, imageID int64) ([]*GetDockerLayersAndResultsForImageRow, error)
	GetDockerScannedLayersForImage(ctx context.Context, imageID int64) ([]string, error)
	GetGitCommitsWithResults(ctx context.Context, repositoryID int64) ([]*GetGitCommitsWithResultsRow, error)
	GetGitRepositoriesForProject(ctx context.Context, projectID int64) ([]*GitRepository, error)
	GetGitRepository(ctx context.Context, id int64) (*GitRepository, error)
	GetGitScannedCommitsForProject(ctx context.Context, projectID int64) ([]string, error)
	GetGitScannedCommitsForProjectBatch(ctx context.Context, arg GetGitScannedCommitsForProjectBatchParams) ([]string, error)
	GetInvalidTOTPSecretForUser(ctx context.Context, userID int64) (*TotpSecretToken, error)
	GetMysqlDatabase(ctx context.Context, id int64) (*GetMysqlDatabaseRow, error)
	GetMysqlDatabasesForProject(ctx context.Context, projectID int64) ([]*MysqlDatabase, error)
	GetMysqlScan(ctx context.Context, id int64) (*MysqlScan, error)
	GetMysqlScanByScanID(ctx context.Context, scanID int64) (*MysqlScan, error)
	GetNvdCPEsByDBType(ctx context.Context, databaseType int32) ([]*NvdCpe, error)
	GetNvdCveByCveID(ctx context.Context, cveID string) (*NvdCfe, error)
	GetOrganization(ctx context.Context, id int64) (*Organization, error)
	GetOrganizationByName(ctx context.Context, name string) (*Organization, error)
	GetOrganizationMembers(ctx context.Context, organizationID int64) ([]*OrganizationMember, error)
	GetOrganizationPermissionForUser(ctx context.Context, arg GetOrganizationPermissionForUserParams) (int32, error)
	GetOrganizationProjects(ctx context.Context, organizationID int64) ([]*GetOrganizationProjectsRow, error)
	GetOrganizationUser(ctx context.Context, arg GetOrganizationUserParams) (*OrganizationMember, error)
	GetOrganizationsByUser(ctx context.Context, userID int64) ([]*GetOrganizationsByUserRow, error)
	GetOrganizationsForUser(ctx context.Context, userID int64) ([]*Organization, error)
	GetPostgresDatabase(ctx context.Context, id int64) (*GetPostgresDatabaseRow, error)
	GetPostgresDatabasesForProject(ctx context.Context, projectID int64) ([]*PostgresDatabase, error)
	GetPostgresScan(ctx context.Context, id int64) (*PostgresScan, error)
	GetPostgresScanByScanID(ctx context.Context, scanID int64) (*PostgresScan, error)
	GetProject(ctx context.Context, id int64) (*Project, error)
	GetProjectByOrganizationAndName(ctx context.Context, arg GetProjectByOrganizationAndNameParams) (*Project, error)
	GetProjectInfoForMysqlScanByScanID(ctx context.Context, scanID int64) (*GetProjectInfoForMysqlScanByScanIDRow, error)
	GetProjectInfoForPostgresScanByScanID(ctx context.Context, scanID int64) (*GetProjectInfoForPostgresScanByScanIDRow, error)
	GetProjectMembers(ctx context.Context, projectID int64) ([]*ProjectMember, error)
	GetProjectPermissionForUser(ctx context.Context, arg GetProjectPermissionForUserParams) (int16, error)
	GetProjectUser(ctx context.Context, arg GetProjectUserParams) (*ProjectMember, error)
	GetProjectWithStats(ctx context.Context, id int64) (*GetProjectWithStatsRow, error)
	GetProjectsByOrganization(ctx context.Context, organizationID int64) ([]*Project, error)
	GetResetPasswordToken(ctx context.Context, id uuid.UUID) (*ResetPasswordToken, error)
	GetScan(ctx context.Context, id int64) (*GetScanRow, error)
	GetScanBruteforceResults(ctx context.Context, scanID int64) ([]*ScanBruteforceResult, error)
	GetScanGroup(ctx context.Context, id int64) (*ScanGroup, error)
	GetScanGroupsForProject(ctx context.Context, projectID int64) ([]*GetScanGroupsForProjectRow, error)
	GetScanResults(ctx context.Context, scanID int64) ([]*ScanResult, error)
	GetScanResultsByScanIdAndScanSource(ctx context.Context, arg GetScanResultsByScanIdAndScanSourceParams) ([]*ScanResult, error)
	GetScansForProject(ctx context.Context, projectID int64) ([]*GetScansForProjectRow, error)
	GetScansForScanGroup(ctx context.Context, scanGroupID int64) ([]*Scan, error)
	GetSpecificBruteforcePasswordID(ctx context.Context, arg GetSpecificBruteforcePasswordIDParams) (int64, error)
	GetTOTPSecretForUser(ctx context.Context, userID int64) (*TotpSecretToken, error)
	GetUser(ctx context.Context, id int64) (*User, error)
	GetUserByConfirmSelector(ctx context.Context, confirmSelector sql.NullString) (*User, error)
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	GetUserByRecoverSelector(ctx context.Context, recoverSelector sql.NullString) (*User, error)
	GetUserByUsernameOrEmail(ctx context.Context, arg GetUserByUsernameOrEmailParams) (*User, error)
	GetUserByWebauthnCredentialID(ctx context.Context, credentialID []byte) (*GetUserByWebauthnCredentialIDRow, error)
	GetWebauthnCredentialsByUserID(ctx context.Context, userID int64) ([]*WebauthnCredential, error)
	GetWorkerByToken(ctx context.Context, token string) (*Worker, error)
	GetWorkerForProject(ctx context.Context, arg GetWorkerForProjectParams) (*Worker, error)
	GetWorkerForScan(ctx context.Context, id int64) (*Worker, error)
	GetWorkersForProject(ctx context.Context, projectID int64) ([]*Worker, error)
	InsertBruteforcePasswords(ctx context.Context, passwords []string) error
	InvalidateResetPasswordToken(ctx context.Context, id uuid.UUID) error
	InvalidateTOTPSecretForUser(ctx context.Context, userID int64) error
	ListUsers(ctx context.Context) ([]*User, error)
	ListUsersPaginated(ctx context.Context, arg ListUsersPaginatedParams) ([]*User, error)
	RemoveOrganizationUser(ctx context.Context, arg RemoveOrganizationUserParams) (*OrganizationMember, error)
	SetOrganizationPermissionsForUser(ctx context.Context, arg SetOrganizationPermissionsForUserParams) (*OrganizationMember, error)
	UpdateBruteforcedPassword(ctx context.Context, arg UpdateBruteforcedPasswordParams) (*BruteforcedPassword, error)
	UpdateDockerImage(ctx context.Context, arg UpdateDockerImageParams) (*DockerImage, error)
	UpdateGitRepository(ctx context.Context, arg UpdateGitRepositoryParams) (*GitRepository, error)
	UpdateMysqlDatabase(ctx context.Context, arg UpdateMysqlDatabaseParams) error
	UpdateMysqlVersion(ctx context.Context, arg UpdateMysqlVersionParams) error
	UpdateNvdCPE(ctx context.Context, arg UpdateNvdCPEParams) error
	UpdatePostgresDatabase(ctx context.Context, arg UpdatePostgresDatabaseParams) error
	UpdatePostgresVersion(ctx context.Context, arg UpdatePostgresVersionParams) error
	UpdateScanBruteforceResult(ctx context.Context, arg UpdateScanBruteforceResultParams) error
	UpdateScanStatus(ctx context.Context, arg UpdateScanStatusParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
	UpdateWebauthnCredential(ctx context.Context, arg UpdateWebauthnCredentialParams) (*WebauthnCredential, error)
	ValidateTOTPSecretForUser(ctx context.Context, userID int64) error
}

var _ Querier = (*Queries)(nil)
